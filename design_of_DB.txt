בס"ד

Design of our DB:

סוג הDB הוא לא רליציוני מונחה שורות ונשמר בקובץ shelve (כל טבלה בקובץ shelve נפרד) ששמו הוא שם הטבלה.


הDB תומך בפעולות הבאות:

-   הגדרת טבלה: (בטבלה יכולים להיות ערכים מסוג מחרוזת, מספר ותאריך) יצירת טבלה חדשה תיווצר ע"י יצירת קובץ ריק חדש מסוג shelve המפתחות יהיו 
    ערך primary key של הטבלה והערך יהיה dictionary שבו נשמור את כל השדות הנוספים, הkey יהיה שם העמודה.

-    מחיקת טבלה: מחיקת הקובץ המתאים (ששמו כשם הטבלה).

-    הכנסת רשומה לטבלה: הוספת מפתח חדש לdictionary שהvalue שלו הוא dictionary עם כל השדות הנוספים.

-    מחיקת רשומה: מחיקת המפתח המתאים מdictionary עם כל הערכים שלו.

-    עדכון רשומה בטבלה: משנים את הvalue בdictionary במקום של הkey שקיבלנו.


4 שיקולים עיקריים:

ביצועים: כל הפעולות שניתן לעשות עם הDB מהירות מאד.

יעילות מקום: הdata מאוחסן בקובץ shelve שהוא קובץ בינארי וממילא תופס פחות מקום. בנוסף, בכל עדכון או גישה לקובץ אין צורך לשמור את כל הdata במשתנה אלא פונים ישירות לקובץ.

סיבוכיות זמן: שאילתות על שורה עולות (1)O. שאילתות על עמודה עולה O(n). הכנסה, עדכון ומחיקה של שורה עולה(1)O. 

גמישות: הDB הנבחר אינו רליציוני ולכן גמיש מבחינת מספר העמודות וסוגם.


יתרונות: 

-    המידע חסוי מכיוון ששמור בקובץ בינארי.
-    גודל הקובץ קטן.
-    גישה ישירה לdata.

חסרונות:

-    כאשר יש big data בקובץ עלות הטעינה גבוהה, יתכן והתרגום של הקובץ יאט את זמן השליפה.


